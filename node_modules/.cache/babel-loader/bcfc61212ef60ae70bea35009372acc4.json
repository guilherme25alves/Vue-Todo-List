{"remainingRequest":"C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\src\\views\\Home.vue","mtime":1592947546637},{"path":"C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592350849716},{"path":"C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\node_modules\\babel-loader\\lib\\index.js","mtime":1592350849674},{"path":"C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592350849716},{"path":"C:\\Users\\Gui\\Desktop\\Gui\\Estudos\\Vue.js\\ProjetoInicial\\todo\\node_modules\\vue-loader\\lib\\index.js","mtime":1592350868353}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvR3VpL0Rlc2t0b3AvR3VpL0VzdHVkb3MvVnVlLmpzL1Byb2pldG9JbmljaWFsL3RvZG8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJDOi9Vc2Vycy9HdWkvRGVza3RvcC9HdWkvRXN0dWRvcy9WdWUuanMvUHJvamV0b0luaWNpYWwvdG9kby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIEltcG9ydGFuZG8gbyBjb21wb25lbnRlIGRhIGxpc3RhLCBxdWUgaW5pY2lhbG1lbnRlIGZpY2F2YSBuZXNzYSBtZXNtYSBWaWV3Ci8vIFRlbW9zIHF1ZSByZWZlcmVuY2lhciBlbGUgdGFtYsOpbSBkZW50cm8gZG8gY29tcG9uZW50cyBubyBleHBvcnQgZGVmYXVsdCBkbyBTY3JpcHQgCmltcG9ydCBUb2RvIGZyb20gJ0AvY29tcG9uZW50cy9Ub2RvJzsgLy8gVXNhbW9zIG8gQCBwYXJhIGVsZSBwZWdhciBvIGVuZGVyZcOnbyBkbyBhcnF1aXZvIGEgcGFydGlyIGRhIHBhc3RhIFNSQwovLyBDb20gbyBtYXBBY3Rpb25zIHBvZGVtb3MgbWFwZWFyIG1lbGhvciBub3Nzb3Mgc3RhdGVzLyBtdXRhdGlvbnMKLy8gbWFwQWN0aW9ucyBtYXBlYW1vcyBhcyBhw6fDtWVzIG9zIG3DqXRvZG9zIHBhcmEgYWRkLCByZW1vdmVyLCB0b2dnbGUsIGVudHJlIG91dHJvcwovLyBtYXBTdGF0ZSBtYXBlYW1vcyBvcyBlc3RhZG9zLCBhcyBwcm9wcmllZGFkZXMgcXVlIGd1YXJkYW0gdmFsb3JlcyBlIHBvZGVtIHNlciBhbHRlcmFkb3Mgc2V1cyBjb21wb3J0YW1lbnRvcyBlIHZhbG9yZXMKCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgLy9VdGlsaXphbmRvIG8gVnVleAogICAgcmV0dXJuIHsKICAgICAgdG9kbzogewogICAgICAgIGNoZWNrZWQ6IGZhbHNlCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd0b2RvcycsICdsb2FkaW5nJ10pKSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWydhZGRUb2RvJywgJ3RvZ2dsZVRvZG8nLCAncmVtb3ZlVG9kbyddKSksIHt9LCB7CiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCh0b2RvKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIENvbW8gYSBhY3Rpb24gYWRkVG9kbyB0w6EgbWFwZWFkYSB0cm9jYW1vcyBvIGNvZGlnbyBhYmFpeG8gcGVsbyBkZXNjb21lbnRhZG8KICAgICAgICAgICAgICAgIC8vYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FkZFRvZG8nLCB0b2RvKSAKICAgICAgICAgICAgICAgIF90aGlzLnRvZG8gPSB7CiAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IGZhbHNlCiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9IC8vLS0+IErDoSBtYXBlYWRhIGFnb3JhIGNvbSBvIG1hcEFjdGlvbnMKICAgIC8vdG9nZ2xlVG9kbyh0b2RvKXsKICAgIC8vICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndG9nZ2xlVG9kbycsIHRvZG8pOyAgIAogICAgLy99LAogICAgLy8tLT4gSsOhIG1hcGVhZGEgdGFtYsOpbSBjb20gbyBtYXBBY3Rpb25zCiAgICAvL3JlbW92ZVRvZG8odG9kbyl7CiAgICAvLyB0aGlzLiRzdG9yZS5kaXNwYXRjaCgncmVtb3ZlVG9kbycsIHRvZG8pOwogICAgLy99LAoKICB9KSwKICBjb21wb25lbnRzOiB7CiAgICBUb2RvOiBUb2RvCiAgfQp9Ow=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA,OAAA,IAAA,MAAA,mBAAA,C,CACA;AAEA;AACA;AACA;;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA;AACA,WAAA;AAAA,MAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA;AAAA,KAAA;AAEA,GANA;AAOA,EAAA,QAAA,oBAEA,QAAA,CAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAFA,CAPA;AAoBA,EAAA,OAAA,kCAEA,UAAA,CAAA,CAAA,SAAA,EAAA,YAAA,EAAA,YAAA,CAAA,CAFA;AAIA,IAAA,GAJA,eAIA,IAJA,EAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,gBAAA,KAAA,CAAA,IAAA,GAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,KARA,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBA,IApBA;AAuCA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA;AAvCA,CAAA","sourcesContent":["<template>\r\n    <div class=\"container grid-xs py-2\">\r\n      <form @submit.prevent=\"add(todo)\"> \r\n          <!-- @submit.prevnent (Forma de se atribuir um method do Vue para o form\r\n        . O prevent é usado para evitar o reload da tela quando o form é submetido)\r\n        Referenciar o elemento todo no método (o parâmetro que definimos no script, dento do method)-->\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" v-model=\"todo.description\" class=\"form-input\" placeholder=\"Novo todo\">\r\n          <button class=\"btn btn-primary input-group-btn\" :class=\"{loading}\">Adicionar</button>\r\n        </div>\r\n      </form>\r\n        <!-- Forma de printar um dado pelo Vue.js \r\n        {{ todos }}\r\n        -->\r\n        <div class=\"todo-list\">\r\n          <!-- v-for (foreach nos elementos) 0 :key é o identificador unico para o vue não se perder no laço -->\r\n          <!-- Essa tag todo faz referência ao contéudo do componente Todo que vai ser renderizado-->\r\n          <todo v-for=\"task in todos\" :key=\"task.id\" @toggle=\"toggleTodo\" @remove=\"removeTodo\" :todo=\"task\"></todo>\r\n          <!-- @toggle é o evento que foi emitido pelo Componente filho (Todo.vue) ao clicar no botão concluído \r\n          @<nome-do-evento> : É a forma de se recuperar os eventos emitidos pelo $emit do Componente filho\r\n            Recuperamos esse evento emitido e atribuimos algum método pra ele pra gerar alguma ação -->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// Importando o componente da lista, que inicialmente ficava nessa mesma View\r\n// Temos que referenciar ele também dentro do components no export default do Script \r\nimport Todo from '@/components/Todo'\r\n// Usamos o @ para ele pegar o endereço do arquivo a partir da pasta SRC\r\n\r\n// Com o mapActions podemos mapear melhor nossos states/ mutations\r\n// mapActions mapeamos as ações os métodos para add, remover, toggle, entre outros\r\n// mapState mapeamos os estados, as propriedades que guardam valores e podem ser alterados seus comportamentos e valores\r\nimport { mapActions, mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'App',\r\n  data(){\r\n    //Utilizando o Vuex\r\n    return {  todo: { checked: false} }; \r\n\r\n  },\r\n  computed:{\r\n    \r\n    ...mapState(['todos', 'loading'])\r\n\r\n    //--> Já mapeado no mapState\r\n    //todos(){\r\n    //  return this.$store.state.todos;\r\n    //},\r\n    //--> Já mapeado no mapState\r\n    //loading(){\r\n    //  return this.$store.state.loading;\r\n    //}\r\n  },\r\n  methods: {\r\n\r\n    ...mapActions(['addTodo', 'toggleTodo', 'removeTodo']),\r\n\r\n    async add(todo){\r\n          // Como a action addTodo tá mapeada trocamos o codigo abaixo pelo descomentado\r\n          //await this.$store.dispatch('addTodo', todo) \r\n          this.todo = { checked: false };         \r\n    },\r\n    \r\n    //--> Já mapeada agora com o mapActions\r\n    //toggleTodo(todo){\r\n    //     this.$store.dispatch('toggleTodo', todo);   \r\n    //},\r\n    //--> Já mapeada também com o mapActions\r\n    //removeTodo(todo){\r\n    // this.$store.dispatch('removeTodo', todo);\r\n    //},\r\n  },\r\n  components: {\r\n     Todo\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  /* Tag scoped adicionada quer dizer que esse style é aplicado somente para este componente */\r\n  .todo-list{\r\n    padding-top: 2rem;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views"}]}